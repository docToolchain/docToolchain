buildscript {
    repositories {
        maven {
            credentials {
                username mavenUsername
                password mavenPassword
            }
            url mavenRepository
        }
    }
    dependencies {
        classpath "org.openapitools:openapi-generator-gradle-plugin:6.6.0"
    }
}
apply plugin: 'org.openapi.generator'


// For a list of supported options see https://github.com/OpenAPITools/openapi-generator/tree/master/modules/openapi-generator-gradle-plugin

//tag::exportOpenApi[]
task exportOpenApi (
        type: org.openapitools.generator.gradle.plugin.tasks.GenerateTask,
        group: 'docToolchain',
        description: 'exports OpenAPI specification to the asciidoc file') {

    def specFile = findProperty("openApi.specFile")?:config.openApi.specFile
    if (!specFile) {
        throw new GradleException("Missing property 'openApi.specFile': please provide the location of the OpenAPI specification file")
    }

    outputs.upToDateWhen { false }
    outputs.cacheIf { false }
    generatorName = 'asciidoc'
    outputDir = "${targetDir}/OpenAPI".toString()
    inputSpec = "${docDir}/${specFile}" // plugin is not able to find file if inputPath is defined as '.'

    logger.debug("\n=====================\nProject Config:\n=====================")
    logger.debug("Docdir: ${docDir}")
    logger.debug("Target: ${targetDir}")
    logger.info("\n=====================\nOpenAPI Config:\n=====================")
    logger.info("Specification file: ${specFile}")
    logger.info("inputSpec: ${inputSpec}")
    logger.info("outputDir: ${outputDir}\n")

    additionalProperties = [
        infoEmail:"${config.openApi.infoEmail}",
        infoUrl:"${config.openApi.infoUrl}"
    ]
}
//end::exportOpenApi[]
