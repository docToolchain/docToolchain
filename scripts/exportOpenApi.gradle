buildscript {
    repositories {
        maven {
            credentials {
                username mavenUsername
                password mavenPassword
            }
            url mavenRepository
        }
    }
    dependencies {
        classpath "org.openapitools:openapi-generator-gradle-plugin:6.6.0"
    }
}
apply plugin: 'org.openapi.generator'


// For a list of supported options see https://github.com/OpenAPITools/openapi-generator/tree/master/modules/openapi-generator-gradle-plugin
def specFile = findProperty("openApi.specFile")?:config.openApi.specFile

//tag::exportOpenApi[]
task exportOpenApi (
        type: org.openapitools.generator.gradle.plugin.tasks.GenerateTask,
        group: 'docToolchain',
        description: 'exports OpenAPI specification to the asciidoc file') {

    doFirst {
        if (!specFile) {
            throw new GradleException("Missing property 'openApi.specFile': please provide the location of the OpenAPI specification file")
        }

        logger.debug("\n=====================\nProject Config:\n=====================")
        logger.debug("Docdir: ${docDir}")
        logger.debug("Target: ${targetDir}")
        logger.info("\n=====================\nOpenAPI Config:\n=====================")
        logger.info("Specification file: ${specFile}")
        logger.info("inputSpec: ${inputSpec}")
        logger.info("outputDir: ${outputDir}\n")
    }

    if (!specFile) {
        // If the specFile is not defined skip the rest. Otherwise GenerateTask
        // is called which fails with a misleading error message "file doesn't exist".
        // We throw the descriptive "missing property" error message during execution phase.
        return
    }

    // The properties defined by 'GenerateTask' have to be declared in the
    // configuration phase. Defining those properties in doFirst() throws
    // exception "propert 'X' is final and cannot be changed any further".
    generatorName = 'asciidoc'
    inputSpec = "${docDir}/${specFile}" // plugin is not able to find file if inputPath is defined as '.'
    outputDir = "${targetDir}/OpenAPI".toString()

    // Define cache is always out-of-date to enforce file generation regardless of input and output file
    outputs.upToDateWhen { false }
    outputs.cacheIf { false }

    def infoEmail = (findProperty("openApi.infoEmail")?:config.openApi.infoEmail)?:"info@example.org"
    def infoUrl = (findProperty("openApi.infoUrl")?:config.openApi.infoEmail)?:"https://my-api.example.org"

    additionalProperties = [
        infoEmail:"${infoEmail}",
        infoUrl:"${infoUrl}"
    ]
}
//end::exportOpenApi[]
