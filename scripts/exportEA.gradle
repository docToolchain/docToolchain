
//tag::streamingExecute[]
task streamingExecute(
        dependsOn: [],
        description: 'extends the String class with a better .executeCmd'
) {
    doLast {
        //I need a streaming execute in order to export from EA
        String.metaClass.executeCmd = { silent ->
            //make sure that all paramters are interpreted through the cmd-shell
            //TODO: make this also work with *nix
            def p = "cmd /c ${delegate.value}".execute()
            def result = [std: '', err: '']
            def ready = false
            Thread.start {
                def reader = new BufferedReader(new InputStreamReader(p.in))
                def line = ""
                while ((line = reader.readLine()) != null) {
                    if (silent != false) {
                        println "" + line
                    }
                    result.std += line + "\n"
                }
                ready = true
                reader.close()
            }
            p.waitForOrKill(30000)
            def error = p.err.text

            if (error.isEmpty()) {
                return result
            } else {
                throw new RuntimeException("\n" + error)
            }
        }
    }
}
//end::streamingExecute[]

//tag::exportEA[]
task exportEA(
        dependsOn: [streamingExecute],
        description: 'exports all diagrams and some texts from EA files',
        group: 'docToolchain'
) {
    doFirst {
        //make sure path for notes exists
        //and remove old notes
        new File('src/docs/ea').deleteDir()
        //also remove old diagrams
        new File('src/docs/images/ea').deleteDir()
        //create a readme to clarify things
        def readme = """This folder contains exported diagrams or notes from Enterprise Architect.
		
Please note that these are generated files but reside in the `src`-folder in order to be versioned.

This is to make sure that they can be used from environments other than windows.

# Warning!

**The contents of this folder	will be overwritten with each re-export!**

use `gradle exportEA` to re-export files
"""
        new File('src/docs/images/ea/.').mkdirs()
        new File('src/docs/images/ea/readme.ad').write(readme)
        new File('src/docs/ea/.').mkdirs()
        new File('src/docs/ea/readme.ad').write(readme)
    }
    doLast {
        //execute through cscript in order to make sure that we get WScript.echo right
        "%SystemRoot%\\System32\\cscript.exe //nologo scripts/exportEAP.vbs".executeCmd()
        //the VB Script is only capable of writing iso-8859-1-Files.
        //we now have to convert them to UTF-8
        new File('src/docs/ea/.').eachFileRecurse { file ->
            if (file.isFile()) {
                println "exported notes " + file.canonicalPath
                file.write(file.getText('iso-8859-1'), 'utf-8')
            }
        }
    }
}
//end::exportEA[]
