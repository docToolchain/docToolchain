buildscript {
    repositories {
        maven {
            credentials {
                username mavenUsername
                password mavenPassword
            }
            url mavenRepository
        }
    }
    dependencies {
        classpath 'com.structurizr:structurizr-dsl:1.26.1'
        classpath 'com.structurizr:structurizr-export:1.10.0'
        classpath 'io.github.goto1134:structurizr-d2-exporter:1.2.0'
        classpath 'com.structurizr:structurizr-graphviz:1.7.0'
    }
}

import com.structurizr.dsl.*
import com.structurizr.Workspace
import com.structurizr.export.*
import com.structurizr.export.plantuml.*
import com.structurizr.view.*

// TODO:
// * refactor: extract configuration paramaters
// * provide configuration parameters

//tag::exportStructurizr[]
task exportStructurizr (
        group: 'docToolchain',
        description: 'exports the views of a Structurizr DSL file to diagramms'
) {

    def workspaceFile = findProperty("structurizr.workspace")?:config.structurizr.workspace
    def exportPath = findProperty("structurizr.exportPath")?:config.structurizr.exportPath

    logger.info("\n=====================\nStructurizr Config:\n=====================")
    logger.info("workspace: ${workspaceFile}")
    logger.info("exportPath: ${exportPath}")

    if (!workspaceFile) {
        logger.info("\n---> Structurizr workspace not found in Config.groovy")
        return
    } else {
        logger.info("Found workspace in Config.groovy")
    }

    StructurizrDslParser parser = new StructurizrDslParser();
    // TODO: provide better error output in case parsing fails
    parser.parse(new File(docDir, workspaceFile));
    Workspace workspace = parser.getWorkspace();
    ThemeUtils.loadThemes(workspace);

    // TODO: the format is hardcoded for the moment. Here we should provide the 'format' configuration parameter
    StructurizrPlantUMLExporter exporter = new StructurizrPlantUMLExporter();
    def fileExtension = '.puml'

    Collection<Diagram> diagrams = exporter.export(workspace);

    // Make sure the directory exists where the diagrams are exported
    new File(docDir, exportPath).mkdirs()
    diagrams.each { diagram ->
        def file = new File(docDir, exportPath+"/"+diagram.key+fileExtension)
        file.write(diagram.definition)
        def legend = new File(docDir, exportPath+"/"+diagram.key+"-key"+fileExtension)
        legend.write(diagram.legend.definition)
    }
}
//end::exportStructurizr[]
