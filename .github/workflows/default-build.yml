name: Build Project (Default)

on:
  push:
    branches:
      - '!gh-pages'
    path:
      - 'scripts/**'
      - 'src/**'
      - '!**/README.*'
      - '!dtcw'
      - '!test/**'
  pull_request:
    branches: [ master, ng ]
    # Ignore changes for dtcw
    path:
      - 'scripts/**'
      - 'src/**'
      - '!**/README.*'
      - '!dtcw'
      - '!test/**'
  workflow_dispatch: {}

jobs:
  build:
    strategy:
      matrix:
        os: [ubuntu-latest]
        # TODO: Will it really run on one of these? , windows-latest, macOS-latest]
        java: [8, 11, 14] #, 17]
        jdk: [adopt]
        # , temurin]
      fail-fast: false
    name: Java ${{ matrix.jdk }}-${{ matrix.java }} Build

    runs-on: ${{ matrix.os }}

    steps:
      - name: Install used packages
        run: sudo apt-get install -y graphviz shellcheck pandoc

      - uses: actions/checkout@v3
        with:
          fetch-depth: 0

      # Provide fast feedback about quality of bash scripts
      - name: ShellCheck
        run: |
          # Note that we only check executable shell scripts to avoid treating matching documentation files
          find . -type f -perm 0755 -exec egrep -l '^#!(/bin/bash|/usr/bin/env bash)' {} + | xargs shellcheck

      - name: Set up JDK
        uses: actions/setup-java@v3
        with:
          distribution: ${{ matrix.jdk }}
          java-version: ${{ matrix.java }}
          cache: 'gradle'

      - name: Build (and deploy) with Gradle Wrapper
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          JDK_VERSION: "${{ matrix.jdk }}-${{ matrix.java }}"
        run: |
          ./.ci.sh
      - name: Archive test results
        if: always()
        uses: actions/upload-artifact@v3
        with:
          name: test-report
          path: build/reports/tests/test/
